name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop

jobs:
  pr-validation:
    name: Validate PR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          
      - name: Check for conflicts
        run: |
          git fetch origin ${{ github.base_ref }}
          if git merge-tree $(git merge-base HEAD origin/${{ github.base_ref }}) HEAD origin/${{ github.base_ref }} | grep -q "<<<<<<"; then
            echo "‚ùå Merge conflicts detected"
            exit 1
          else
            echo "‚úÖ No merge conflicts"
          fi
          
      - name: Check file sizes
        run: |
          # Verificar que no se suban archivos grandes
          large_files=$(find . -type f -size +10M -not -path "*/\.git/*" -not -path "*/build/*" -not -path "*/\.gradle/*")
          if [ -n "$large_files" ]; then
            echo "‚ùå Large files detected (>10MB):"
            echo "$large_files"
            exit 1
          else
            echo "‚úÖ No large files"
          fi

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: pr-validation
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Run Detekt
        run: ./gradlew detekt || true
        
      - name: Upload Detekt reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detekt-reports
          path: |
            **/build/reports/detekt/
          retention-days: 7
          
      - name: Analyze code metrics
        run: |
          echo "üìä Analyzing code metrics..."
          
          # Contar l√≠neas de c√≥digo modificadas
          ADDED=$(git diff --stat origin/${{ github.base_ref }}...HEAD | grep -oP '\d+(?= insertion)' | awk '{s+=$1} END {print s}')
          REMOVED=$(git diff --stat origin/${{ github.base_ref }}...HEAD | grep -oP '\d+(?= deletion)' | awk '{s+=$1} END {print s}')
          
          echo "‚úèÔ∏è  Lines added: ${ADDED:-0}"
          echo "üóëÔ∏è  Lines removed: ${REMOVED:-0}"
          
          # Verificar archivos modificados
          MODIFIED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | wc -l)
          echo "üìù Files modified: $MODIFIED"
          
          if [ "$MODIFIED" -gt 50 ]; then
            echo "‚ö†Ô∏è  Warning: Large PR with $MODIFIED files modified"
          fi

  build-pr:
    name: Build PR Changes
    runs-on: ubuntu-latest
    needs: pr-validation
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build debug APKs
        run: |
          ./gradlew :app:phone:assembleLibreDebug
          ./gradlew :app:tv:assembleLibreDebug
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
          
      - name: Upload debug APKs
        uses: actions/upload-artifact@v4
        with:
          name: pr-debug-apks
          path: |
            app/phone/build/outputs/apk/libre/debug/*.apk
            app/tv/build/outputs/apk/libre/debug/*.apk
          retention-days: 7

  test-pr:
    name: Test PR Changes
    runs-on: ubuntu-latest
    needs: pr-validation
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Run tests with coverage
        run: ./gradlew testDebugUnitTest jacocoTestReport || true
        
      - name: Generate coverage report
        run: |
          echo "üìä Generating coverage report..."
          # Buscar reportes de cobertura
          find . -name "jacocoTestReport.xml" -o -name "jacoco.xml" || echo "No coverage reports found"
          
      - name: Comment test results on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## üß™ Test Results\n\n';
            
            try {
              // Buscar archivos de resultados de tests
              const testResults = '‚úÖ Tests executed successfully';
              comment += testResults + '\n';
            } catch (error) {
              comment += '‚ö†Ô∏è Could not parse test results\n';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  size-comparison:
    name: APK Size Comparison
    runs-on: ubuntu-latest
    needs: build-pr
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build PR APK
        run: ./gradlew :app:phone:assembleLibreRelease
        
      - name: Get PR APK size
        id: pr-size
        run: |
          PR_APK=$(find app/phone/build/outputs/apk/libre/release -name "*.apk" -type f | head -n 1)
          if [ -f "$PR_APK" ]; then
            PR_SIZE=$(stat -c%s "$PR_APK" 2>/dev/null || stat -f%z "$PR_APK")
            echo "size=$PR_SIZE" >> $GITHUB_OUTPUT
            echo "PR APK size: $PR_SIZE bytes"
          else
            echo "size=0" >> $GITHUB_OUTPUT
          fi
          
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          
      - name: Build base APK
        run: ./gradlew clean :app:phone:assembleLibreRelease
        
      - name: Get base APK size
        id: base-size
        run: |
          BASE_APK=$(find app/phone/build/outputs/apk/libre/release -name "*.apk" -type f | head -n 1)
          if [ -f "$BASE_APK" ]; then
            BASE_SIZE=$(stat -c%s "$BASE_APK" 2>/dev/null || stat -f%z "$BASE_APK")
            echo "size=$BASE_SIZE" >> $GITHUB_OUTPUT
            echo "Base APK size: $BASE_SIZE bytes"
          else
            echo "size=0" >> $GITHUB_OUTPUT
          fi
          
      - name: Compare sizes and comment
        uses: actions/github-script@v7
        with:
          script: |
            const prSize = parseInt('${{ steps.pr-size.outputs.size }}');
            const baseSize = parseInt('${{ steps.base-size.outputs.size }}');
            const diff = prSize - baseSize;
            const diffPercent = baseSize > 0 ? ((diff / baseSize) * 100).toFixed(2) : 0;
            
            const formatBytes = (bytes) => {
              const mb = (bytes / 1048576).toFixed(2);
              return `${mb} MB`;
            };
            
            let emoji = 'üì¶';
            let status = 'unchanged';
            if (diff > 0) {
              emoji = diff > 1048576 ? '‚ö†Ô∏è' : 'üìà';
              status = 'increased';
            } else if (diff < 0) {
              emoji = 'üìâ';
              status = 'decreased';
            }
            
            const comment = `## ${emoji} APK Size Comparison
            
            | Version | Size | Change |
            |---------|------|--------|
            | Base (\`${context.payload.pull_request.base.ref}\`) | ${formatBytes(baseSize)} | - |
            | PR (\`${context.payload.pull_request.head.ref}\`) | ${formatBytes(prSize)} | ${diff > 0 ? '+' : ''}${formatBytes(Math.abs(diff))} (${diffPercent > 0 ? '+' : ''}${diffPercent}%) |
            
            **Status**: APK size ${status} ${diff > 0 ? 'by' : diff < 0 ? 'by' : ''} ${Math.abs(diff)} bytes`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [pr-validation, code-quality, build-pr, test-pr]
    if: always()
    
    steps:
      - name: Generate PR summary
        uses: actions/github-script@v7
        with:
          script: |
            const results = {
              validation: '${{ needs.pr-validation.result }}',
              quality: '${{ needs.code-quality.result }}',
              build: '${{ needs.build-pr.result }}',
              test: '${{ needs.test-pr.result }}'
            };
            
            let summary = '## üìã PR Check Summary\n\n';
            summary += '| Check | Status |\n';
            summary += '|-------|--------|\n';
            
            for (const [check, result] of Object.entries(results)) {
              const emoji = result === 'success' ? '‚úÖ' : result === 'failure' ? '‚ùå' : '‚ö†Ô∏è';
              summary += `| ${check.charAt(0).toUpperCase() + check.slice(1)} | ${emoji} ${result} |\n`;
            }
            
            const allPassed = Object.values(results).every(r => r === 'success');
            
            if (allPassed) {
              summary += '\n‚úÖ All checks passed! This PR is ready for review.';
            } else {
              summary += '\n‚ö†Ô∏è Some checks failed. Please review the logs above.';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
