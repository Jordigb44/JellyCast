name: Build and Test

on:
  push:
    branches:
      - '**'  # Todas las ramas
  pull_request:
    branches:
      - '**'

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Run ktlint
        run: ./gradlew ktlintCheck || true
        continue-on-error: true
        
      - name: Run Android Lint
        run: ./gradlew lint
        
      - name: Upload lint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: |
            **/build/reports/lint-results-*.html
            **/build/reports/ktlint/
          retention-days: 7

  build:
    name: Build APKs
    runs-on: ubuntu-latest
    needs: lint
    
    strategy:
      matrix:
        variant:
          - module: phone
            flavor: libre
            buildType: debug
          - module: phone
            flavor: libre
            buildType: release
          - module: tv
            flavor: libre
            buildType: debug
          - module: tv
            flavor: libre
            buildType: release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build ${{ matrix.variant.module }} ${{ matrix.variant.flavor }} ${{ matrix.variant.buildType }}
        run: |
          ./gradlew :app:${{ matrix.variant.module }}:assemble${{ matrix.variant.flavor }}${{ matrix.variant.buildType }}
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2
          
      - name: Upload APK artifact
        if: matrix.variant.buildType == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ matrix.variant.module }}-${{ matrix.variant.flavor }}-${{ matrix.variant.buildType }}
          path: |
            app/${{ matrix.variant.module }}/build/outputs/apk/**/*.apk
          retention-days: 30

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Run unit tests
        run: ./gradlew testDebugUnitTest
        
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/reports/tests/
            **/build/test-results/
          retention-days: 7
          
      - name: Publish test results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            **/build/test-results/**/*.xml

  check-compatibility:
    name: Check Backward Compatibility
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Check for breaking changes
        run: |
          echo "Checking for potential breaking changes..."
          # Aquí puedes agregar herramientas como API Guardian o Binary Compatibility Validator
          ./gradlew build -x test
          
      - name: Comment on PR
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ Potential breaking changes detected. Please review the build logs.'
            })

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Run dependency check
        run: ./gradlew dependencyCheckAnalyze || true
        
      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            **/build/reports/dependency-check-report.html
          retention-days: 30

  build-status:
    name: Build Status Check
    runs-on: ubuntu-latest
    needs: [lint, build, test]
    if: always()
    
    steps:
      - name: Check build status
        run: |
          if [[ "${{ needs.lint.result }}" == "failure" ]] || \
             [[ "${{ needs.build.result }}" == "failure" ]] || \
             [[ "${{ needs.test.result }}" == "failure" ]]; then
            echo "❌ Build failed"
            exit 1
          else
            echo "✅ Build successful"
          fi
          
      - name: Comment on PR
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Build failed. Please check the workflow logs for details.'
            })
            
      - name: Comment on PR success
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ All checks passed! Build is successful.'
            })
